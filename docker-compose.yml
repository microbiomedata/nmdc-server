version: "3.3"
services:

  data:
    image: nginx

  db:
    # This version is duplicated in the GitHub Actions workflow
    image: postgres:13
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
      - ./scripts/docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .docker-env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=nmdc
    command:
      - postgres
      - "-c"
      # Our MGA ingest makes some *very* large transactions
      - "max_wal_size=2GB"
    ports:
      # We specify `127.0.0.1` here so that other computers on the same LAN cannot
      # access the container, even when the host's firewall is configured to allow
      # incoming connections to Docker.
      # Reference: https://github.com/compose-spec/compose-spec/blob/main/spec.md#short-syntax-3
      - "127.0.0.1:5432:5432"

  backend:
    image: ghcr.io/microbiomedata/nmdc-server/server:main
    depends_on:
      - db
    env_file:
      - .docker-env
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PGHOST=db
      - UVICORN_RELOAD=True
      # Set the `STORAGE_EMULATOR_HOST` environment variable so that the Google Cloud SDK for Python will _not_ try to
      # validate the developer's Application Default Credentials (ADC) file (i.e. `application_default_credentials.json`).
      #
      # Note: This technique is shown at https://github.com/oittaa/gcp-storage-emulator/blob/main/README.md#cli-usage,
      #       which is the documentation of a different GCS emulator tool than the `fake-gcs-server` tool we're using.
      #
      #       The closest thing to Google-official documentation I've found about this environment variable is an entry
      #       in the changelog of the Google Cloud SDK for Python version 1.20.0, which contains a link to the
      #       following merged Pull Request: https://github.com/googleapis/google-cloud-python/pull/9219
      #
      - STORAGE_EMULATOR_HOST='http://storage:4443'
    networks:
      - public
      - default
    ports:
      - "8000:8000"
    volumes:
      - ./data/ingest:/data/ingest
      - ./nmdc_server:/app/nmdc_server
    # Use a TTY so colors are preserved in the log output
    tty: true

  web:
    image: ghcr.io/microbiomedata/nmdc-server/client:main
    depends_on:
      - backend
      - data
    env_file:
      - .docker-env
    environment:
      BACKEND_URL: "http://backend:8000"
      DNS_ADDRESS: "127.0.0.11"
    build:
      context: web/
      dockerfile: Dockerfile
    networks:
      - public
      - default
    ports:
      - "8080:80"

  zipstreamer:
    image: ghcr.io/scosman/packages/zipstreamer:stable
    ports:
      - "4008:4008"

  storage:
    image: fsouza/fake-gcs-server
    ports:
      - "4443:4443"
    volumes:
      - storage-data:/storage
    command: "-scheme http -public-host localhost:4443 -filesystem-root /storage"

volumes:
  app-db-data:
  app-db-ingest:
  storage-data:

networks:
  public:
