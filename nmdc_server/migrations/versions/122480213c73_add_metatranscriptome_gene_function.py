"""Add Metatranscriptome Gene Function Aggregation

Revision ID: 122480213c73
Revises: 68c2c008f4cf
Create Date: 2022-04-08 13:16:53.275687

"""
from typing import Optional

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "122480213c73"
down_revision: Optional[str] = "68c2c008f4cf"
branch_labels: Optional[str] = None
depends_on: Optional[str] = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "mt_gene_function",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("metatranscriptome_id", sa.String(), nullable=False),
        sa.Column("gene_function_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["gene_function_id"],
            ["gene_function.id"],
            name=op.f("fk_mt_gene_function_gene_function_id_gene_function"),
        ),
        sa.ForeignKeyConstraint(
            ["metatranscriptome_id"],
            ["metatranscriptome.id"],
            name=op.f("fk_mt_gene_function_metatranscriptome_id_metatranscriptome"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_mt_gene_function")),
    )
    op.create_table(
        "mt_gene_function_aggregation",
        sa.Column("metatranscriptome_id", sa.String(), nullable=False),
        sa.Column("gene_function_id", sa.String(), nullable=False),
        sa.Column("count", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["gene_function_id"],
            ["gene_function.id"],
            name=op.f("fk_mt_gene_function_aggregation_gene_function_id_gene_function"),
        ),
        sa.ForeignKeyConstraint(
            ["metatranscriptome_id"],
            ["metatranscriptome.id"],
            name=op.f("fk_mt_gene_function_aggregation_metatranscriptome_id_metatranscriptome"),
        ),
        sa.PrimaryKeyConstraint(
            "metatranscriptome_id", "gene_function_id", name=op.f("pk_mt_gene_function_aggregation")
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("mt_gene_function_aggregation")
    op.drop_table("mt_gene_function")
    # ### end Alembic commands ###
