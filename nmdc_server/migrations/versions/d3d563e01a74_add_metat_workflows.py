"""Add MetatranscriptomeAssembly and MetatranscriptomeAnnotation workflow models

Revision ID: d3d563e01a74
Revises: b6e2cb2f8f36
Create Date: 2024-07-24 16:12:29.000012

"""

from typing import Optional

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "d3d563e01a74"
down_revision: Optional[str] = "b6e2cb2f8f36"
branch_labels: Optional[str] = None
depends_on: Optional[str] = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "metatranscriptome_annotation",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("git_url", sa.String(), nullable=False),
        sa.Column("started_at_time", sa.DateTime(), nullable=False),
        sa.Column("ended_at_time", sa.DateTime(), nullable=False),
        sa.Column("execution_resource", sa.String(), nullable=False),
        sa.Column("omics_processing_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["omics_processing_id"],
            ["omics_processing.id"],
            name=op.f("fk_metatranscriptome_annotation_omics_processing_id_omics_processing"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_metatranscriptome_annotation")),
    )
    op.create_table(
        "metatranscriptome_assembly",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("git_url", sa.String(), nullable=False),
        sa.Column("started_at_time", sa.DateTime(), nullable=False),
        sa.Column("ended_at_time", sa.DateTime(), nullable=False),
        sa.Column("execution_resource", sa.String(), nullable=False),
        sa.Column("scaffolds", sa.BigInteger(), nullable=True),
        sa.Column("contigs", sa.BigInteger(), nullable=True),
        sa.Column("scaf_bp", sa.BigInteger(), nullable=True),
        sa.Column("contig_bp", sa.BigInteger(), nullable=True),
        sa.Column("scaf_n50", sa.BigInteger(), nullable=True),
        sa.Column("scaf_l50", sa.BigInteger(), nullable=True),
        sa.Column("ctg_n50", sa.BigInteger(), nullable=True),
        sa.Column("ctg_l50", sa.BigInteger(), nullable=True),
        sa.Column("scaf_n90", sa.BigInteger(), nullable=True),
        sa.Column("scaf_l90", sa.BigInteger(), nullable=True),
        sa.Column("ctg_n90", sa.BigInteger(), nullable=True),
        sa.Column("ctg_l90", sa.BigInteger(), nullable=True),
        sa.Column("scaf_max", sa.BigInteger(), nullable=True),
        sa.Column("ctg_max", sa.BigInteger(), nullable=True),
        sa.Column("scaf_n_gt50k", sa.BigInteger(), nullable=True),
        sa.Column("scaf_l_gt50k", sa.BigInteger(), nullable=True),
        sa.Column("scaf_pct_gt50k", sa.BigInteger(), nullable=True),
        sa.Column("num_input_reads", sa.BigInteger(), nullable=True),
        sa.Column("num_aligned_reads", sa.BigInteger(), nullable=True),
        sa.Column("scaf_logsum", sa.Float(), nullable=True),
        sa.Column("scaf_powsum", sa.Float(), nullable=True),
        sa.Column("ctg_logsum", sa.Float(), nullable=True),
        sa.Column("ctg_powsum", sa.Float(), nullable=True),
        sa.Column("asm_score", sa.Float(), nullable=True),
        sa.Column("gap_pct", sa.Float(), nullable=True),
        sa.Column("gc_avg", sa.Float(), nullable=True),
        sa.Column("gc_std", sa.Float(), nullable=True),
        sa.Column("omics_processing_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["omics_processing_id"],
            ["omics_processing.id"],
            name=op.f("fk_metatranscriptome_assembly_omics_processing_id_omics_processing"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_metatranscriptome_assembly")),
    )
    op.create_table(
        "metatranscriptome_annotation_input_association",
        sa.Column("metatranscriptome_annotation_id", sa.String(), nullable=True),
        sa.Column("data_object_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["data_object_id"],
            ["data_object.id"],
            name=op.f(
                "fk_metatranscriptome_annotation_input_association_data_object_id_data_object"
            ),
        ),
        sa.ForeignKeyConstraint(
            ["metatranscriptome_annotation_id"],
            ["metatranscriptome_annotation.id"],
            name=op.f(
                "fk_metatranscriptome_annotation_input_association_metatranscriptome_annotation_id_metatranscriptome_annotation"
            ),
        ),
        sa.UniqueConstraint(
            "metatranscriptome_annotation_id",
            "data_object_id",
            name=op.f(
                "uq_metatranscriptome_annotation_input_association_metatranscriptome_annotation_id"
            ),
        ),
    )
    op.create_table(
        "metatranscriptome_annotation_output_association",
        sa.Column("metatranscriptome_annotation_id", sa.String(), nullable=True),
        sa.Column("data_object_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["data_object_id"],
            ["data_object.id"],
            name=op.f(
                "fk_metatranscriptome_annotation_output_association_data_object_id_data_object"
            ),
        ),
        sa.ForeignKeyConstraint(
            ["metatranscriptome_annotation_id"],
            ["metatranscriptome_annotation.id"],
            name=op.f(
                "fk_metatranscriptome_annotation_output_association_metatranscriptome_annotation_id_metatranscriptome_annotation"
            ),
        ),
        sa.UniqueConstraint(
            "metatranscriptome_annotation_id",
            "data_object_id",
            name=op.f(
                "uq_metatranscriptome_annotation_output_association_metatranscriptome_annotation_id"
            ),
        ),
    )
    op.create_table(
        "metatranscriptome_assembly_input_association",
        sa.Column("metatranscriptome_assembly_id", sa.String(), nullable=True),
        sa.Column("data_object_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["data_object_id"],
            ["data_object.id"],
            name=op.f("fk_metatranscriptome_assembly_input_association_data_object_id_data_object"),
        ),
        sa.ForeignKeyConstraint(
            ["metatranscriptome_assembly_id"],
            ["metatranscriptome_assembly.id"],
            name=op.f(
                "fk_metatranscriptome_assembly_input_association_metatranscriptome_assembly_id_metatranscriptome_assembly"
            ),
        ),
        sa.UniqueConstraint(
            "metatranscriptome_assembly_id",
            "data_object_id",
            name=op.f(
                "uq_metatranscriptome_assembly_input_association_metatranscriptome_assembly_id"
            ),
        ),
    )
    op.create_table(
        "metatranscriptome_assembly_output_association",
        sa.Column("metatranscriptome_assembly_id", sa.String(), nullable=True),
        sa.Column("data_object_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["data_object_id"],
            ["data_object.id"],
            name=op.f(
                "fk_metatranscriptome_assembly_output_association_data_object_id_data_object"
            ),
        ),
        sa.ForeignKeyConstraint(
            ["metatranscriptome_assembly_id"],
            ["metatranscriptome_assembly.id"],
            name=op.f(
                "fk_metatranscriptome_assembly_output_association_metatranscriptome_assembly_id_metatranscriptome_assembly"
            ),
        ),
        sa.UniqueConstraint(
            "metatranscriptome_assembly_id",
            "data_object_id",
            name=op.f(
                "uq_metatranscriptome_assembly_output_association_metatranscriptome_assembly_id"
            ),
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("metatranscriptome_assembly_output_association")
    op.drop_table("metatranscriptome_assembly_input_association")
    op.drop_table("metatranscriptome_annotation_output_association")
    op.drop_table("metatranscriptome_annotation_input_association")
    op.drop_table("metatranscriptome_assembly")
    op.drop_table("metatranscriptome_annotation")
    # ### end Alembic commands ###
